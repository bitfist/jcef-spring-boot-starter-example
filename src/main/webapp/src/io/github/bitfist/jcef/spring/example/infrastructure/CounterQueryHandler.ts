/** AUTO‑GENERATED by JCEF TypeScriptGeneratorProcessor – DO NOT EDIT **/
import { CefQueryService } from '../../../../../../../cef/CefQueryService';
import type { ResponseType } from '../../../../../../../cef/CefQueryService';

export interface CounterResponse {
  id: string;
  counter: number;
}

export interface CounterQuery {
  counter: number;
}

export class CounterQueryHandler {
  constructor() {}

  /** route: /counter/{id} */
  static count(id: number, query: CounterQuery): Promise<CounterResponse> {
    return CefQueryService.request<CounterResponse>(`/counter/${id}`, query, "object" as ResponseType);
  }

  /** route: /counter/simple */
  static simple(counter: number): Promise<number> {
    return CefQueryService.request<number>("/counter/simple", counter, "number" as ResponseType);
  }

  /** route: /counter/logRandom */
  static logRandom(): Promise<void> {
    return CefQueryService.request<void>("/counter/logRandom", "object" as ResponseType);
  }

}
